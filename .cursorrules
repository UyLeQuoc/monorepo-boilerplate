# Project Rules and Patterns

## Code Organization
- Use TypeScript for all new code
- Follow monorepo structure with apps/web and apps/api
- Keep shared code in appropriate directories
- Maintain clear separation between frontend and backend

## Development Workflow
- Use npm for package management
- Run development servers concurrently
- Follow Git flow branching strategy
- Maintain comprehensive documentation

## Code Style
- Use TypeScript strict mode
- Follow ESLint and Prettier configurations
- Use meaningful variable and function names
- Write clear comments for complex logic

## Testing
- Write unit tests for critical functionality
- Use Jest for testing
- Maintain good test coverage
- Follow TDD practices where appropriate

## Documentation
- Keep Memory Bank up to date
- Document all major decisions
- Maintain clear README files
- Use JSDoc for code documentation

## Project-Specific Patterns
- Use GraphQL for API communication
- Implement Shadcn UI components
- Follow NestJS best practices
- Use PostgreSQL for data persistence

## Known Challenges
- Type safety across the stack
- GraphQL schema management
- Database migrations
- CI/CD pipeline configuration

## Evolution Notes
- Project started as a monorepo boilerplate
- Focus on developer experience
- Emphasis on type safety
- Modern tooling and practices 